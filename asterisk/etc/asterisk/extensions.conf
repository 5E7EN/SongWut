[custom-songwut-handler]
exten => s,1,Answer()
 same => n(start),Background(custom/Welcome_PressAnyKeyToIdentify)
 same => n,WaitExten(5)

 ; Repeat the prompt twice before hanging up
 same => n,Background(custom/PressAnyKeyToIdentify)
 same => n,WaitExten(5)
 same => n,Background(custom/PressAnyKeyToIdentify)
 same => n,WaitExten(5)

 ; No input response
 same => n,Playback(custom/NoInputGoodbye)
 same => n,Wait(1) 
 same => n,Hangup()

 ; Handle normally invalid extensions/key presses (* or #)
exten => i,1,Goto(_X,1) ; Redirect invalid input to valid key handling
exten => e,1,Goto(_X,1) ; Redirect exceptions to valid key handling

 ; Sanitize caller ID and set filename for recording
exten => _X,1,Set(SANITIZED_CALLERID=${FILTER(0-9,${CALLERID(num)})})
 same => n,Set(SANITIZED_CALLERNAME=${FILTER(a-zA-Z0-9 ,${CALLERID(name)})})
 same => n,Set(FILENAME=/var/spool/asterisk/recordings/${SANITIZED_CALLERID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.wav)

 ; Record 7 seconds of audio, stopping after only 4 seconds if line is silent
 same => n,Record(${FILENAME},4,7)

 ; Dump variables for debugging
 same => n,DumpChan()

 ; Check the recording duration, if it's under 5 seconds we know it's no audio and handle accordingly
 same => n,Set(DURATION=${SHELL(soxi -D ${FILENAME} | cut -d '.' -f 1)})
 same => n,NoOp(Audio recording duration: ${DURATION})
 same => n,GotoIf($[${DURATION} > 5]?process:short)

 ; Handle short recordings - delete it, play message, and hangup
 same => n(short),System(rm -f ${FILENAME})
 same => n,Playback(custom/CouldNotHearSoundTryAgainGoodbye)
 same => n,Wait(1) 
 same => n,Hangup()

 ; Process valid recordings - run song detection script and handle based on result
 same => n(process),NoOp(Executing: /home/asterisk/.nvm/versions/node/v22.12.0/bin/node /var/lib/asterisk/agi-bin/songwut/detectAndNotify.js ${FILENAME} ${SANITIZED_CALLERID} "${SANITIZED_CALLERNAME}")
 same => n,Set(result=${SHELL(/home/asterisk/.nvm/versions/node/v22.12.0/bin/node /var/lib/asterisk/agi-bin/songwut/detectAndNotify.js ${FILENAME} ${SANITIZED_CALLERID} "${SANITIZED_CALLERNAME}")})
 same => n,NoOp(Song detection result: ${result})

 ; Store detection result in custom CDR field - this doesn't work yet because we're on in FreePBX context
 same => n,Set(CDR(song_detect_result)=${result})

 ; Handle result value of song detection script
 same => n,GotoIf($["${result}" = "success"]?success:failure)

 ; Handle success and failure cases
 same => n(success),Playback(custom/SongIdentifiedTextSentHaveAGreatDay)
 same => n,Wait(1) 
 same => n,Hangup()

 same => n(failure),GotoIf($["${result}" = "no_detect"]?nodetect:error)

 ; No detection case
 same => n(nodetect),Playback(custom/CouldNotIdentifySongTryAgainLater)
 same => n,Wait(1) 
 same => n,Hangup()

 ; Error case
 same => n(error),Playback(custom/AnErrorOccuredTryAgainLaterGoodbye)
 same => n,Wait(1) 
 same => n,Hangup()
